layout: {qmk_keyboard: chocofi}
layers:
  l_alpha:
  - X
  - W
  - M
  - G
  - J
  - {t: RA(3), s: $}
  - {t: ., s: ':'}
  - {t: '''', s: (}
  - {t: '"', s: )}
  - B
  - S
  - C
  - N
  - T
  - K
  - {t: CMMA, s: ;}
  - A
  - E
  - I
  - H
  - V
  - P
  - L
  - D
  - {t: /, s: '*'}
  - {t: '-', s: +}
  - U
  - O
  - Y
  - F
  - {t: ENTER, h: '4'}
  - {t: R, h: '1'}
  - {t: LSHFT, h: LSHFT, s: CAPS}
  - {t: '2', h: '2'}
  - {t: SPACE, h: '3'}
  - {t: BSPC, h: '4', s: DEL}
  '1':
  - RG(Q)
  - HOME
  - RG(W)
  - END
  - ''
  - PG UP
  - ''
  - ''
  - ''
  - ''
  - {t: LA(LEFT), h: RSHFT}
  - LEFT
  - UP
  - RIGHT
  - LA(RIGHT)
  - PG DN
  - ''
  - ''
  - Q
  - Z
  - RG(Z)
  - {t: RG(C), h: RG(X)}
  - DOWN
  - RG(V)
  - RG(RS(Z))
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - {type: held}
  - ''
  - LG(LBKT)
  - LG(RBKT)
  - ''
  '2':
  - {t: '`', h: '&tripleGrave GRAVE'}
  - \
  - /
  - '@'
  - {t: '*', h: ^}
  - {t: RA(3), s: $}
  - {t: ., s: ':'}
  - {t: (, h: '&pairPar RPAR'}
  - )
  - ;
  - {t: <, h: '&pairLtGt GT'}
  - '='
  - '-'
  - '>'
  - +
  - {t: CMMA, s: ;}
  - {t: '{', h: '&pairBrc RBRC'}
  - ''''
  - '"'
  - '}'
  - '!'
  - '&'
  - '|'
  - '%'
  - _
  - ''
  - $
  - {t: '[', h: '&pairBkt RBKT'}
  - ']'
  - '~'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: '&SymLock', type: held}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  '3':
  - '='
  - '7'
  - '8'
  - '9'
  - '&NumLock'
  - '#'
  - .
  - {t: (, h: '&pairPar RPAR'}
  - )
  - ''
  - +
  - '4'
  - '5'
  - '6'
  - '-'
  - ','
  - ':'
  - ''
  - ''
  - ''
  - {t: '*', h: ^}
  - '1'
  - '2'
  - '3'
  - /
  - '-'
  - $
  - '#'
  - RA(2)
  - '~'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '0'
  - {t: ▽, type: trans}
  - {type: held}
  - {t: ▽, type: trans}
  '4':
  - ''
  - PREV
  - NEXT
  - PP
  - ''
  - {t: BT, h: '0'}
  - {t: BT, h: '1'}
  - {t: BT, h: '2'}
  - {t: BT, h: '3'}
  - {t: BT, h: '4'}
  - ''
  - VOL DN
  - VOL UP
  - MUTE
  - ''
  - BT CLR
  - ''
  - ''
  - F11
  - F12
  - F1
  - F2
  - F3
  - F4
  - F5
  - F6
  - F7
  - F8
  - F9
  - F10
  - {type: held}
  - ''
  - ''
  - ''
  - ''
  - ''
combos:
- p: [20, 21]
  k: LCTRL
- p: [21, 22]
  k: LALT
- p: [22, 23]
  k: LGUI
- p: [20, 21, 22]
  k: LC(LALT)
- p: [21, 22, 23]
  k: LA(LGUI)
- p: [20, 21, 22, 23]
  k: LC(LGUI)
- p: [20, 11, 12, 23]
  k: LC(LA(LGUI))
- p: [28, 29]
  k: RCTRL
- p: [27, 28]
  k: RALT
- p: [26, 27]
  k: RGUI
- p: [27, 28, 29]
  k: RC(RALT)
- p: [26, 27, 28]
  k: RA(RGUI)
- p: [26, 27, 28, 29]
  k: RC(RGUI)
- p: [26, 17, 18, 29]
  k: RC(RA(RGUI))
- p: [1, 2]
  k: '&AppSwitch'
  l: ['1']
- p: [2, 3]
  k: '&TabSwitch'
  l: ['1']
- p: [32, 33]
  k: '&caps_word'
  l: [l_alpha]
- p: [10, 12]
  k: TAB
- p: [0, 2]
  k: LS(TAB)
- p: [13, 14]
  k: SPACE
- p: [23, 24]
  k: {t: BSPC, s: DEL}
- p: [0, 1]
  k: ESC
- p: [1, 2]
  k: LG(A)
  l: ['1']
- p: [11, 12]
  k: RG(F)
  l: ['1']
- p: [10, 11, 12]
  k: '&Sch'
  l: [l_alpha]
- p: [10, 11, 13]
  k: '&Tch'
  l: [l_alpha]
- p: [12, 13]
  k: '&Th'
  l: [l_alpha]
- p: [11, 12]
  k: '&Ch'
  l: [l_alpha]
- p: [1, 2]
  k: '&Wh'
  l: [l_alpha]
- p: [10, 11]
  k: '&Sh'
  l: [l_alpha]
- p: [2, 3]
  k: '&Gh'
  l: [l_alpha]
- p: [1, 2, 3]
  k: '&ght'
  l: [l_alpha]
- p: [21, 23]
  k: '&Ph'
  l: [l_alpha]
- p: [1, 3]
  k: {t: '&Qu U', h: Q}
  l: [l_alpha]
- p: [11, 13]
  k: Z
  l: [l_alpha]
- p: [6, 7]
  k: {t: <, h: '&'}
- p: [7, 8]
  k: {t: '>', h: '|'}
- p: [8, 9]
  k: '@'
- p: [16, 17]
  k: '!'
- p: [17, 18]
  k: '?'
- p: [16, 18]
  k: {t: '=', h: '%'}
- p: [26, 28]
  k: _
- p: [16, 19]
  k: '~'
- p: [18, 19]
  k: {t: LA(MINUS), h: LA(LS(MINUS))}
  l: [l_alpha]
- p: [18, 13]
  k: LS(I)
  l: [l_alpha]
- p: [18, 12]
  k: '&typePnMe'
  l: [l_alpha]
- p: [18, 21]
  k: '&typePnMy'
  l: [l_alpha]
- p: [18, 21, 22]
  k: '&typePnMine'
  l: [l_alpha]
- p: [18, 2]
  k: '&typePnIm'
  l: [l_alpha]
- p: [18, 22]
  k: '&typePnIll'
  l: [l_alpha]
- p: [18, 20]
  k: '&typePnIve'
  l: [l_alpha]
- p: [18, 23]
  k: '&typePnId'
  l: [l_alpha]
- p: [26, 13]
  k: '&typePnWe'
  l: [l_alpha]
- p: [26, 12]
  k: '&typePnUs'
  l: [l_alpha]
- p: [26, 21]
  k: '&typePnOur'
  l: [l_alpha]
- p: [26, 20, 21]
  k: '&typePnOurs'
  l: [l_alpha]
- p: [26, 31]
  k: '&typePnWere'
  l: [l_alpha]
- p: [26, 22]
  k: '&typePnWell'
  l: [l_alpha]
- p: [26, 20]
  k: '&typePnWeve'
  l: [l_alpha]
- p: [26, 23]
  k: '&typePnWed'
  l: [l_alpha]
- p: [28, 13]
  k: '&typePnYou'
  l: [l_alpha]
- p: [28, 12]
  k: '&typePnYou'
  l: [l_alpha]
- p: [28, 21]
  k: '&typePnYour'
  l: [l_alpha]
- p: [28, 20, 21]
  k: '&typePnYours'
  l: [l_alpha]
- p: [28, 31]
  k: '&typePnYoure'
  l: [l_alpha]
- p: [28, 22]
  k: '&typePnYoull'
  l: [l_alpha]
- p: [28, 20]
  k: '&typePnYouve'
  l: [l_alpha]
- p: [28, 23]
  k: '&typePnYoud'
  l: [l_alpha]
- p: [19, 13]
  k: '&typePnHe'
  l: [l_alpha]
- p: [19, 12]
  k: '&typePnHim'
  l: [l_alpha]
- p: [19, 21]
  k: '&typePnHis'
  l: [l_alpha]
- p: [19, 20, 21]
  k: '&typePnHis'
  l: [l_alpha]
- p: [19, 10]
  k: '&typePnHes'
  l: [l_alpha]
- p: [19, 22]
  k: '&typePnHell'
  l: [l_alpha]
- p: [19, 23]
  k: '&typePnHed'
  l: [l_alpha]
- p: [18, 19, 13]
  k: '&typePnShe'
  l: [l_alpha]
- p: [18, 19, 12]
  k: '&typePnHer'
  l: [l_alpha]
- p: [18, 19, 21]
  k: '&typePnHer'
  l: [l_alpha]
- p: [18, 19, 20, 21]
  k: '&typePnHers'
  l: [l_alpha]
- p: [18, 19, 10]
  k: '&typePnShes'
  l: [l_alpha]
- p: [18, 19, 22]
  k: '&typePnShell'
  l: [l_alpha]
- p: [18, 19, 23]
  k: '&typePnShed'
  l: [l_alpha]
- p: [17, 13]
  k: '&typePnThey'
  l: [l_alpha]
- p: [17, 12]
  k: '&typePnThem'
  l: [l_alpha]
- p: [17, 21]
  k: '&typePnTheir'
  l: [l_alpha]
- p: [17, 20, 21]
  k: '&typePnTheirs'
  l: [l_alpha]
- p: [17, 31]
  k: '&typePnTheyre'
  l: [l_alpha]
- p: [17, 22]
  k: '&typePnTheyll'
  l: [l_alpha]
- p: [17, 20]
  k: '&typePnTheyve'
  l: [l_alpha]
- p: [17, 23]
  k: '&typePnTheyd'
  l: [l_alpha]
